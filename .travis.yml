language: minimal
os: linux
dist: xenial
group: stable
sudo: required
git:
  depth: false
env:
  global:
    - ANDROID_API_LEVEL=29
    - ANDROID_BUILD_TOOLS_VERSION=29.0.2
    # For updates check developer.android.com/studio#downloads (current 26.1.1)
    - ANDROID_SDK_TOOLS=sdk-tools-linux-4333796.zip
cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/.android/build-cache/

stages:
  - name: Build and deploy release on tags
    if: tag IS present

android_phases:
  - phase: &before_install
      # check if OpenJDK8 is installed and install if missing
      - if ! dpkg -s openjdk-8-jdk >/dev/null 2>&1; then sudo apt-get update; sudo apt-get install openjdk-8-jdk; fi
      - java -version
      # print available java versions with their path (must contain java-8-openjdk-amd64)
      - sudo update-alternatives --config java
      # set JAVA_HOME path
      - export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
      # download und unzip Android SDK Tools
      - wget -q https://dl.google.com/android/repository/$ANDROID_SDK_TOOLS
      - unzip -q $ANDROID_SDK_TOOLS -d $HOME/sdk
      # set SDK Tools path variable and ANDROID_HOME
      - export PATH=$PATH:$HOME/sdk/tools/bin
      - export ANDROID_HOME=$HOME/sdk
      # create empty cfg file to prevent sdkmanager warning message
      - mkdir -p $HOME/.android && touch $HOME/.android/repositories.cfg
  - phase: &install
      # latest SDK Platform-Tools
      - yes | sdkmanager "platform-tools" >/dev/null
      # defined SDK Platform
      - yes | sdkmanager "platforms;android-$ANDROID_API_LEVEL" >/dev/null
      # defined SDK Build-Tools
      - yes | sdkmanager "build-tools;$ANDROID_BUILD_TOOLS_VERSION" >/dev/null
      # list installed and available packages
      - sdkmanager --list
  - phase: &before_script
      # set executable flag for gradle wrapper
      - chmod +x gradlew
      # create dir for gradle settings
      - mkdir -p $HOME/.gradle
      # disable gradle daemon for current user
      - echo "org.gradle.daemon=false" >> $HOME/.gradle/gradle.properties
      # set gradle log format to plain
      - echo "org.gradle.console=plain" >> $HOME/.gradle/gradle.properties
      # enable gradle build cache
      - echo "org.gradle.caching=true" >> $HOME/.gradle/gradle.properties
      # log all gradle warnings
      - echo "org.gradle.warning.mode=all" >> $HOME/.gradle/gradle.properties
  - phase: &before_cache
      - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
      - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
      - rm -f  $HOME/.gradle/caches/*/fileHashes/fileHashes.bin
      - rm -f  $HOME/.gradle/caches/*/fileHashes/fileHashes.lock
      - rm -f  $HOME/.gradle/caches/*/javaCompile/javaCompile.lock
      - rm -f  $HOME/.gradle/caches/*/executionHistory/executionHistory.lock
      - rm -f  $HOME/.gradle/caches/journal-1/file-access.bin
      - rm -f  $HOME/.gradle/caches/journal-1/journal-1.lock
      - rm -f  $HOME/.gradle/caches/transforms-1/transforms-1.lock
      - rm -f  $HOME/.gradle/caches/user-id.txt.lock
      # only cache last gradle version used by the wrapper
      # list content in wrapper/dist sorted by modification time and remove entries starting by the second entry
      - ls -d $HOME/.gradle/wrapper/dists/* -1t | tail -n +2 | xargs rm -rf
  - phase: &deploy
      provider: releases
      edge: true
      api_key:
        secure: g9ACJPYoBtNYAqiq25A3GCP2yveGeMHIT6oxVhpVUscpfeFmAzCyxJgrNEg+t4m1FL9351ROAK8SEnWHwxBhqJQbiDNIu2T7C6uo77RPmgImN8lBC5USMnErOWhZDvyCW8gC2Vxp5xlsQCoJJ5xXqaP49K4XzMKAW5+CT5/TO3uj8SS9ucVNj0Sb6w8KqtCtvAirNnYK4xSYfQl5CuxN58HxoNLffvUEViRAuaahwOqDNgzBEsOLRWROpKeyJLG/P58XCdN6wxAsu8TtApq3LeZvzzamLu8haSRS1h2yT/13Ye248Kr9FDx1I1WCbZr5Cmfdth774ewkjG/lCvlO9IJc/T5odLXSEtC246QdYY+0lICZnJOH9CENkTw2oku5Xv+tiYOUpCyRJwfjDYAzS5eSIAkfYHPA4rRZ3W1BpSy4Xjnyoxqx08cVo4geYTLf1LGehi5oMSwVom/Knl6JTCOWITzf6VVMujxv4b5gHvltj1rl3KjbcFrKuoB8RsHo+MNQSbKgVGmpBpDrYi1kAS3HamL6oxQE8v7NuG73/J0OWtdwQ7ezjP7/JfXGSREBT5/7rMKHDuWZv9h7XRlLlMJYktQdy5/cl09hp9L+81SHSsDujdx4HPWc1yPBoLqNAXTgEw+TOj4dAyXLI3vQW+kgACbdl4j+q7G1JjsVI+g=
      file_glob: true
      file:
        - $TRAVIS_BUILD_DIR/app/build/outputs/apk/release/*.apk
        - $TRAVIS_BUILD_DIR/app/build/outputs/mapping/release/mapping.txt
      skip_cleanup: true
      draft: false
      on:
        repo: fso13/dnd5-android
        tags: true
      name: $TRAVIS_TAG
      tag_name: $TRAVIS_TAG
      body: "Generated release from Travis CI for build $TRAVIS_BUILD_NUMBER"

jobs:
  include:
    - stage: Build debug
      before_install: *before_install
      install: *install
      before_script: *before_script
      script: "./gradlew assembleDebug --scan"
      before_cache: *before_cache
    - stage: Build and deploy release on tags
      before_install: *before_install
      install: *install
      before_script: *before_script
      script: "./gradlew assembleRelease --scan"
      before_cache: *before_cache
      deploy: *deploy